/* ALT_ENTRies below make sense for assembler only to allow for different
   variants of state register names. They are ignored in disassembler.  */

    ENTRY("%psr", 0x00, 1, 0)
    ENTRY("%wd", 0x01, 0, 0)
    ENTRY("%core_mode", 0x04, 0, 0)
    ENTRY("%cwd", 0x06, 1, 0)
    ENTRY("%psp.hi", 0x07, 1, 0)
    ENTRY("%psp.lo", 0x09, 1, 0)
    ENTRY("%pshtp", 0x0b, 1, 0)
    ENTRY("%pcsp.hi", 0x0d, 1, 0)
    ENTRY("%pcsp.lo", 0x0f, 1, 0)
    ENTRY("%pcshtp", 0x13, 0, 0)
    ENTRY("%ctpr1", 0x15, 0, 0)
    ENTRY("%ctpr2", 0x16, 0, 0)
    ENTRY("%ctpr3", 0x17, 0, 0)
    ENTRY("%sbr", 0x1e, 0, 0)
    /* This flavour of %sbr register name won't be used in disassembler.  */
    ALT_ENTRY("%usbr", 0x1e, 0, 0)
    ENTRY("%cutd", 0x21, 1, 0)
    ENTRY("%eir", 0x23, 0, 0)

    /* Note that `%tsd' register corresponding to 0x24 has been "officially"
       eliminated from all versions of Elbrus instruction set (see Bug #74420
       and Bug #53587). In fact it's not supported starting from elbrus-v3
       only.  */

    ENTRY("%cuir", 0x25, 0, 0)

    ENTRY("%oscud.hi", 0x26, 1, 0)
    ENTRY("%oscud.lo", 0x27, 1, 0)
    ENTRY("%osgd.hi", 0x28, 1, 0)
    ENTRY("%osgd.lo", 0x29, 1, 0)
    ENTRY("%osem", 0x2a, 1, 0)
    ENTRY("%usd.hi", 0x2c, 1, 0)
    ENTRY("%usd.lo", 0x2d, 1, 0)

    /* `%tr' register which used to be encoded with 0x2e has been eliminated
       together with `%tsd' (see above).  */

    ENTRY("%osr0", 0x2f, 0, 0)
    ENTRY("%cud.hi", 0x30, 0, 1)
    ENTRY("%cud.lo", 0x31, 0, 1)
    ENTRY("%gd.hi", 0x32, 0, 1)
    ENTRY("%gd.lo", 0x33, 0, 1)
    ENTRY("%cs.hi", 0x34, 1, 0)
    ENTRY("%cs.lo", 0x35, 1, 0)
    ENTRY("%ds.hi", 0x36, 1, 0)
    ENTRY("%ds.lo", 0x37, 1, 0)
    ENTRY("%es.hi", 0x38, 1, 0)
    ENTRY("%es.lo", 0x39, 1, 0)
    ENTRY("%fs.hi", 0x3a, 1, 0)
    ENTRY("%fs.lo", 0x3b, 1, 0)
    ENTRY("%gs.hi", 0x3c, 1, 0)
    ENTRY("%gs.lo", 0x3d, 1, 0)
    ENTRY("%ss.hi", 0x3e, 1, 0)
    ENTRY("%ss.lo", 0x3f, 1, 0)
    ENTRY("%dibcr", 0x40, 0, 0)
    ENTRY("%dimcr", 0x41, 0, 0)
    ENTRY("%dibsr", 0x42, 0, 0)
    ENTRY("%dtcr", 0x43, 0, 0)
    ENTRY("%dibar0", 0x48, 0, 0)
    ENTRY("%dibar1", 0x49, 0, 0)
    ENTRY("%dibar2", 0x4a, 0, 0)
    ENTRY("%dibar3", 0x4b, 0, 0)
    ENTRY("%dimar0", 0x4c, 0, 0)
    ENTRY("%dimar1", 0x4d, 0, 0)
    ENTRY("%dtarf", 0x4e, 0, 0)
    ENTRY("%dtart", 0x4f, 0, 0)
    ENTRY("%cr0.hi", 0x51, 0, 0)
    ENTRY("%cr0.lo", 0x53, 0, 0)
    ENTRY("%cr1.hi", 0x55, 0, 0)
    ENTRY("%cr1.lo", 0x57, 0, 0)
    ENTRY(__e2s("%sclkm1"), 0x70, 0, 0)
    ENTRY(__e2s("%sclkm2"), 0x71, 0, 0)
    ENTRY(__e3s("%cu_hw0"), 0x78, 0, 0)
    ENTRY(__v5("%cu_hw1"), 0x79, 0, 0)
    ENTRY("%upsr", 0x80, 0, 0)
    ENTRY("%ip", 0x81, 0, 0)
    ENTRY("%nip", 0x82, 0, 0)
    ENTRY("%lsr1", 0xc3, 0, 0)
    ENTRY("%lsr", 0x83, 0, 0)
    ENTRY("%pfpfr", 0x84, 0, 0)
    ENTRY("%fpcr", 0x85, 0, 0)
    ENTRY("%fpsr", 0x86, 0, 0)
    ENTRY("%ilcr1", 0xc7, 0, 0)
    ENTRY("%ilcr", 0x87, 0, 0)
    ENTRY("%br", 0x88, 0, 0)
    ENTRY("%bgr", 0x89, 0, 0)
    ENTRY(__e3s("%idr"), 0x8a, 0, 0)
    ENTRY("%clkr", 0x90, 0, 0)
    ENTRY("%rndpr", 0x91, 0, 0)
    ENTRY(__e2s("%sclkr"), 0x92, 0, 0)
    ENTRY("%tir.hi", 0x9c, 0, 0)
    ENTRY("%tir.lo", 0x9d, 0, 0)
    ENTRY("%rpr.lo", 0xa0, 0, 0)
    ENTRY("%sbbp", 0xa1, 0, 0)
    ENTRY("%rpr.hi", 0xa2, 0, 0)
    /* This flavour of %rpr.hi register name won't be used in disassembler.  */
    ALT_ENTRY("%rpr", 0xa0, 0, 0)
    ENTRY("%upsrm", 0xc0, 0, 0)
